//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace EntityModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class StudyContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new StudyContainer object using the connection string found in the 'StudyContainer' section of the application configuration file.
        /// </summary>
        public StudyContainer() : base("name=StudyContainer", "StudyContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StudyContainer object.
        /// </summary>
        public StudyContainer(string connectionString) : base(connectionString, "StudyContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StudyContainer object.
        /// </summary>
        public StudyContainer(EntityConnection connection) : base(connection, "StudyContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Exercise> ExerciseSet
        {
            get
            {
                if ((_ExerciseSet == null))
                {
                    _ExerciseSet = base.CreateObjectSet<Exercise>("ExerciseSet");
                }
                return _ExerciseSet;
            }
        }
        private ObjectSet<Exercise> _ExerciseSet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExerciseSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExerciseSet(Exercise exercise)
        {
            base.AddObject("ExerciseSet", exercise);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Study", Name="Exercise")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Exercise : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Exercise object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="grade">Initial value of the Grade property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="chapter">Initial value of the Chapter property.</param>
        /// <param name="knowledgePoint">Initial value of the KnowledgePoint property.</param>
        public static Exercise CreateExercise(global::System.Guid id, global::System.String grade, global::System.String subject, global::System.String chapter, global::System.String knowledgePoint)
        {
            Exercise exercise = new Exercise();
            exercise.Id = id;
            exercise.Grade = grade;
            exercise.Subject = subject;
            exercise.Chapter = chapter;
            exercise.KnowledgePoint = knowledgePoint;
            return exercise;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Grade
        {
            get
            {
                return _Grade;
            }
            private set
            {
                OnGradeChanging(value);
                ReportPropertyChanging("Grade");
                _Grade = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Grade");
                OnGradeChanged();
            }
        }
        private global::System.String _Grade;
        partial void OnGradeChanging(global::System.String value);
        partial void OnGradeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            private set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Chapter
        {
            get
            {
                return _Chapter;
            }
            private set
            {
                OnChapterChanging(value);
                ReportPropertyChanging("Chapter");
                _Chapter = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Chapter");
                OnChapterChanged();
            }
        }
        private global::System.String _Chapter;
        partial void OnChapterChanging(global::System.String value);
        partial void OnChapterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String KnowledgePoint
        {
            get
            {
                return _KnowledgePoint;
            }
            private set
            {
                OnKnowledgePointChanging(value);
                ReportPropertyChanging("KnowledgePoint");
                _KnowledgePoint = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("KnowledgePoint");
                OnKnowledgePointChanged();
            }
        }
        private global::System.String _KnowledgePoint;
        partial void OnKnowledgePointChanging(global::System.String value);
        partial void OnKnowledgePointChanged();

        #endregion

    
    }

    #endregion

    
}
